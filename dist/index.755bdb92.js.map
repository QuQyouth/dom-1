{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim()\r\n            // template 里的元素需要通过 .content获取到\r\n        return container.content.firstChild\r\n    },\r\n    before(referenceNode, newNode) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode)\r\n    },\r\n    after(referenceNode, newNode) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling)\r\n    },\r\n    append(parent, newNode) {\r\n        parent.appendChild(newNode)\r\n    },\r\n    wrap(son, newNode) {\r\n        dom.before(son, newNode)\r\n        dom.append(newNode, son)\r\n    },\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) {\r\n        const array = []\r\n        let x = node.firstChild\r\n\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n\r\n    // 重载：函数或者方法有相同的名称，但是参数列表不相同\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n\r\n    //适配\r\n    text(node, string) {\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerHTML = string\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerHTML\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                for (let key in name) {\r\n                    node.style[key] = name[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            // contains()方法检查元素的class属性是否包含特定的类名\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n\r\n    //注意这里返回的是一个数组 \r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        // Array.from()将一个类数组对象或者可遍历对象转换成一个真正的数组。\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n            // nodeType === 3 为 text\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n\r\n        }\r\n        return i\r\n    }\r\n\r\n}"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}